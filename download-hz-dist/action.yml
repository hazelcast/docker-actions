name: Download Hazelcast Distribution
inputs:
  repo-vars-as-json:
    description: 'Repo Vars as JSON - not inherited in composite actions - see https://github.com/orgs/community/discussions/49689#discussioncomment-6398261'
    required: true
  distribution:
    description: 'Distribution type: "hazelcast" or "hazelcast-enterprise"'
    required: true
  hz_version:
    description: 'Hazelcast version'
    required: true
  classifier:
    description: 'Maven classifier'
    required: false
  packaging:
    description: 'Maven packaging'
    required: true
  output_file:
    required: true
outputs:
  maven_repo_url:
    description: 'The Maven repository root URL used to download the distribution'
    value: ${{ steps.get_repo_url.outputs.repo_url }}
runs:
  using: "composite"
  steps:
    - id: get_repo_url
      shell: bash
      run: |
        # Pick an appropriate key from "repo-vars-as-json"
        case "${{ inputs.distribution }}" in
            "hazelcast")
              if [[ "${{ inputs.hz_version }}" == *"SNAPSHOT"* ]]; then
                repo_var_name=MAVEN_OSS_SNAPSHOT_REPO
              else
                repo_var_name=MAVEN_OSS_RELEASE_REPO
              fi
            ;;
            "hazelcast-enterprise")
              if [[ "${{ inputs.hz_version }}" == *"SNAPSHOT"* ]]; then
                repo_var_name=MAVEN_EE_SNAPSHOT_REPO
              else
                repo_var_name=MAVEN_EE_RELEASE_REPO
              fi
            ;;
            *)
            echoerr "Unsupported distribution type '${{ inputs.distribution }}'" ; return 1
            ;;
        esac

        # Lookup up the value of the selected key in "repo-vars-as-json"
        echo "repo_url=$(jq --raw-output .${repo_var_name} <<< '${{ inputs.repo-vars-as-json }}')" >> ${GITHUB_OUTPUT}

    - shell: bash
      run: |
        mvn \
          org.apache.maven.plugins:maven-dependency-plugin:2.10:get \
          -DremoteRepositories="${{ steps.get_repo_url.outputs.repo_url }}" \
          -DgroupId="com.hazelcast" \
          -DartifactId="${{ inputs.distribution }}-distribution" \
          -Dversion="${{ inputs.hz_version }}" \
          -Dclassifier="${{ inputs.classifier }}" \
          -Dpackaging="${{ inputs.packaging }}" \
          -Dtransitive=false \
          -Ddest="${{ inputs.output_file }}" \
          --batch-mode \
          --no-transfer-progress
